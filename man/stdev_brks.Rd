% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stdev_brks.R
\name{stdev_brks}
\alias{stdev_brks}
\title{Create labeled intervals based on standard deviations}
\usage{
stdev_brks(
  x,
  value = value,
  filters = NULL,
  by = NULL,
  brks = c(-2, -1/2, 1/2, 2),
  labels = NULL,
  na.rm = TRUE,
  keep_calcs = TRUE,
  ...
)
}
\arguments{
\item{x}{A data frame or tibble}

\item{value}{Bare name of the numeric value column, Default: value}

\item{filters}{An optional named list of values to use for filtering. If given, the observation matching these values will be used as the midpoint. If NULL (the default), the midpoint will be calculated as the mean of values, grouped by \code{x}'s grouping columns (if any) and the arguments to \code{by} (also if any). Each item in that list should be a vector of length 1.}

\item{by}{Optional character vector. If given, this will be used as the group within which intervals are calculated. Default: NULL}

\item{brks}{Numeric vector of break points for cutting z-scores. This vector, plus \code{-Inf} and \code{Inf}, will be passed to \code{base::cut}'s \code{breaks} argument. Default: \code{c(-2, -1/2, 1/2, 2)}}

\item{labels}{Character vector of labels for the resulting factor. If NULL, levels will be in \code{base::cut}'s interval notation. The length of this vector should be one more than the length of \code{brks}. Default: NULL}

\item{na.rm}{Boolean passed on to \code{mean} if midpoints are being calculated. Default: TRUE}

\item{keep_calcs}{Boolean, whether to keep columns from calculations. Default: TRUE}

\item{...}{Additional arguments passed to \code{base::cut}}
}
\value{
A data frame or tibble with the same number of rows as \code{x}. If \code{keep_calcs} is true, the returned data frame will have numeric columns added for midpoint (\code{midpt}), standard deviation (\code{sd}), and z-score (\code{z}), and a factor column for the resulting intervals (\code{brk}). If false, the only column added will be the intervals.
}
\description{
Occasionally we make charts using standard deviations away from an average value to fill bars or geographies---not a hard task, but tedious. This function takes a data frame, then gets a midpoint value, either by calculating the mean or by filtering for an observation already in the data frame (such as a statewide value). It then calculates z-scores based on this midpoint and standard deviation, then cuts z-scores based on \code{brks}. Pay close attention to the argument \code{by}, which allows you to do these calculations grouped by some column; this is useful if you have a data frame of several different indicators. Alternatively, passing a grouped data frame will also do the calculations by group.
}
\examples{
# Calculate intervals along the full dataset, based on calculated mean
stdev_brks(median_age,
    labels = c("Lower", "Somewhat lower", "Average", "Somewhat higher", "Higher")
)

# That might be a little biased because there are also observations for state & counties.
# Calculate intervals for each of the three indicators in the `question` column.
# Both examples have the same result:
median_age |>
    stdev_brks(filters = list(level = "state"), by = "sex") # or list(name = "Connecticut")

median_age |>
    dplyr::group_by(sex) |>
    stdev_brks(filters = list(level = "state"))
}
\seealso{
\code{\link[base:cut]{base::cut()}}
}
\keyword{calculations}
\keyword{misc}
